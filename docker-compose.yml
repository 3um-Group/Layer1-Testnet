---
version: '3.4'
services:

  bootstrap:
    build: monitored-geth-client
    container_name: bootstrap
    hostname: bootstrap
    depends_on:
      - netstats
    networks:
      public: {}
      default:
        aliases:
          - bootstrap
    entrypoint: /root/start.sh
    command: '--datadir=~/.ethereum/devchain --nodekeyhex=${ETH_NODEKEYHEX} --rpcapi "db,personal,eth,net,web3" --rpccorsdomain="${ETH_RPC_CORS}" --networkid=456719 --rpc --rpcaddr="0.0.0.0"'
    deploy:
      restart_policy: on-error
      replicas: 1
      labels:
        traefik.enabled: false
        orbiter.enabled: false
        com.centurylinklabs.watchtower.enabled: false
    volumes:
      - ./files/password:/root/files/password:ro
      - ./files/genesis.json:/root/files/genesis.json:ro
      - ./files/keystore:/root/.ethereum/devchain/keystore:rw
      - /etc/localtime:/etc/localtime:ro
    ports:
      - "30303:30303/tcp"
      - "30303:30303/udp"
      - "8545:8545/tcp"

  eth:
    build: monitored-geth-client
    restart: on-failure
    depends_on:
      - bootstrap
      - netstats
    networks:
      public: {}
      default: {}
    entrypoint: /root/start.sh
    deploy:
      restart_policy: on-error
      replicas: 1
      labels:
        traefik.enabled: false
        orbiter.enabled: false
        com.centurylinklabs.watchtower.enabled: false
    volumes:
      - ./files/password:/root/files/password:ro
      - ./files/genesis.json:/root/files/genesis.json:ro
      - ./files/keystore:/root/.ethereum/devchain/keystore:rw
      - /etc/localtime:/etc/localtime:ro
    command: '--datadir=~/.ethereum/devchain --rpccorsdomain="${ETH_RPC_CORS}" --networkid=456719 --rpc --bootnodes="enode://288b97262895b1c7ec61cf314c2e2004407d0a5dc77566877aad1f2a36659c8b698f4b56fd06c4a0c0bf007b4cfb3e7122d907da3b005fa90e724441902eb19e@XXX:30303"'

  netstats:
    build: eth-netstats
    restart: on-failure
    container_name: netstats
    environment:
      - WS_SECRET=eth-net-stats-secret
    volumes:
      - /etc/localtime:/etc/localtime:ro
    ports:
      - "3000/tcp"
    networks:
      public: {}
      default:
        aliases:
          - netstats
    deploy:
      restart_policy: on-error
      replicas: 1
      labels:
        traefik.enabled: true
        traefik.frontend.priority: 10
        traefik.frontend.port: 3000
        traefik.docker.network: public
        traefik.frontend.protocol: http
        traefik.frontend.rule: 'Host: ethnetstat.local'
        orbiter.enabled: false
        com.centurylinklabs.watchtower.enabled: false

networks:
  default:
    driver: overlay
    scope: swarm

...
# vim: set sts=2 sw=2 ts=2 et ai :
